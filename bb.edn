{:tasks
 {:requires ([babashka.fs :as fs]
             [clojure.string :as str])
  :init (def windows? (str/starts-with? (System/getProperty "os.name")
                                        "Windows"))
  run-main
  {:doc "Run main"
   :task (apply clojure "-M -m svg-clj.main" *command-line-args*)}
  
  uberjar
  {:doc "Builds uberjar"
   :task (when true #_(seq (fs/modified-since "svg_clj.jar" "src"))
           (clojure "-X:uberjar"))}

  run-uber
  {:doc "Run uberjar"
   :depends [uberjar]
   :task (apply shell "java -jar svg_clj.jar" 
                *command-line-args*)}
  
  graalvm
  {:doc "Checks GRAALVM_HOME env var"
   :task
   (let [env (System/getenv "GRAALVM_HOME")]
     (assert "Set GRAALVM_HOME")
     env)}
  
  native-image
  {:doc "Builds native image"
   :depends [graalvm uberjar]
   :task (do
           (shell (str (fs/file graalvm
                                "bin"
                                (if windows?
                                  "gu.cmd"
                                  "gu")))
                  "install" "native-image")
           (shell (str (fs/file graalvm
                                "bin"
                                (if windows?
                                  "native-image.cmd"
                                  "native-image")))
                  "-H:Name=svg-clj"
                  "-jar" "svg_clj.jar"
                  "--initialize-at-build-time"
                  "--no-fallback"
                  "--no-server"))}}}
